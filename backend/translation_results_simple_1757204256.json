{
  "total_assets": 2,
  "total_translations": 4,
  "successful": 4,
  "failed": 0,
  "details": [
    {
      "success": true,
      "asset_code": "68bcb59df62246c87151d350",
      "target_language": "hi",
      "translation": {
        "_id": "68bccf10986b1611ce6887db",
        "name": "What is Neural Networks?",
        "style": "original",
        "content": "<p>न्यूरल नेटवर्क आधुनिक कृत्रिम बुद्धिमत्ता और मशीन लर्निंग में एक आधारभूत अवधारणा है। ये मानव मस्तिष्क से प्रेरित कम्प्यूटेशनल मॉडल हैं, जो डेटा में पैटर्न और संबंधों को पहचानने के लिए डिज़ाइन किए गए हैं। मूल रूप से, एक न्यूरल नेटवर्क में परस्पर जुड़े नोड्स होते हैं, जिन्हें न्यूरॉन्स के रूप में जाना जाता है, जो परतों में व्यवस्थित होते हैं। इन परतों को आमतौर पर इनपुट परतें, हिडन परतें और आउटपुट परतें के रूप में वर्गीकृत किया जाता है। प्रत्येक न्यूरॉन इनपुट सिग्नल प्राप्त करता है, उन्हें एक सक्रियण फ़ंक्शन के माध्यम से संसाधित करता है, और परिणाम को अगली परत में प्रसारित करता है। यह स्तरित आर्किटेक्चर नेटवर्क को इनपुट और आउटपुट के बीच जटिल मैपिंग सीखने की अनुमति देता है।</p>\n<h2>परसेप्ट्रॉन</h2>\n<p>परसेप्ट्रॉन सबसे सरल प्रकार का कृत्रिम न्यूरॉन और न्यूरल नेटवर्क का निर्माण खंड है। यह कई इनपुट मान लेता है, उन पर भार लागू करता है, उनका योग करता है, और योग को एक सक्रियण फ़ंक्शन के माध्यम से पास करके एक आउटपुट उत्पन्न करता है। व्याख्यान नोट्स बताते हैं कि परसेप्ट्रॉन का उपयोग बाइनरी वर्गीकरण कार्यों के लिए कैसे किया जा सकता है, जहाँ आउटपुट या तो 0 या 1 होता है। सीखने की प्रक्रिया में वर्गीकरण त्रुटियों को कम करने के लिए परसेप्ट्रॉन लर्निंग नियम जैसे एल्गोरिदम का उपयोग करके वज़न को समायोजित करना शामिल है।</p>\n<h2>हिडन लेयर्स और डीप लर्निंग</h2>\n<p>जबकि एकल-परत परसेप्ट्रॉन केवल रैखिक रूप से पृथक्करण योग्य समस्याओं को हल कर सकता है, हिडन परतों की शुरुआत नेटवर्क को गैर-रैखिक संबंधों को मॉडल करने की अनुमति देती है। एक हिडन परत में न्यूरॉन्स होते हैं जो मध्यवर्ती गणना करते हैं, जिससे नेटवर्क जटिल पैटर्न सीख सकता है। डीप न्यूरल नेटवर्क में कई हिडन परतें होती हैं, जो पदानुक्रमित फीचर निष्कर्षण और प्रतिनिधित्व सीखने की अनुमति देती हैं। व्याख्यान नोट्स उदाहरण प्रदान करते हैं कि इनपुट डेटा को प्रत्येक परत के माध्यम से कैसे बदल दिया जाता है, यह दर्शाता है कि नेटवर्क के माध्यम से डेटा गुजरने पर उच्च-स्तरीय सार कैसे बनते हैं।</p>\n<h2>सक्रियण फलन</h2>\n<p>सक्रियण फलन न्यूरल नेटवर्क के महत्वपूर्ण घटक हैं जो गैर-रैखिकता का परिचय देते हैं। सामान्य सक्रियण कार्यों में सिग्मॉइड, टैनह और ReLU (रेक्टिफाइड लीनियर यूनिट) शामिल हैं। नोट्स प्रत्येक फ़ंक्शन के गणितीय गुणों और प्रशिक्षण और प्रदर्शन पर उनके प्रभाव की व्याख्या करते हैं। उदाहरण के लिए, सिग्मॉइड फ़ंक्शन संभाव्यता आउटपुट के लिए उपयोगी होते हैं, जबकि ReLU इसकी सादगी और दक्षता के कारण डीप नेटवर्क में व्यापक रूप से उपयोग किया जाता है। सक्रियण कार्यों को समझने से शिक्षार्थियों को ऐसे नेटवर्क डिज़ाइन करने में मदद मिलती है जो जटिल कार्यों को प्रभावी ढंग से हल करने में सक्षम हैं।</p>\n<h2>फॉरवर्ड और बैकवर्ड प्रोपेगेशन</h2>\n<p>व्याख्यान नोट्स न्यूरल नेटवर्क के प्रशिक्षण में दो मुख्य प्रक्रियाओं को शामिल करते हैं: फॉरवर्ड प्रोपेगेशन और बैकवर्ड प्रोपेगेशन। फॉरवर्ड प्रोपेगेशन में इनपुट, परत दर परत दिए गए नेटवर्क के आउटपुट की गणना करना शामिल है। बैकवर्ड प्रोपेगेशन, या बैकप्रॉप, का उपयोग प्रत्येक वज़न के संबंध में हानि फ़ंक्शन के ग्रेडिएंट की गणना करने के लिए किया जाता है, जिससे ग्रेडिएंट डिसेंट के माध्यम से वज़न अपडेट करने में सक्षम होता है। नोट्स में बैकप्रोपेगेशन एल्गोरिथम के विस्तृत व्युत्पन्न शामिल हैं, जिसमें श्रृंखला नियम गणना और ग्रेडिएंट गणना शामिल है, ताकि शिक्षार्थियों को यह गहन समझ प्रदान की जा सके कि नेटवर्क डेटा से कैसे सीखते हैं।</p>\n<h2>हानि फलन और अनुकूलन</h2>\n<p>हानि फलन अनुमानित आउटपुट और वास्तविक लक्ष्य के बीच अंतर को मापते हैं। सामान्य हानि कार्यों में प्रतिगमन के लिए माध्य वर्ग त्रुटि और वर्गीकरण के लिए क्रॉस-एन्ट्रॉपी हानि शामिल है। व्याख्यान नोट्स बताते हैं कि हानि फ़ंक्शन को कम करने से सीखने की प्रक्रिया कैसे निर्देशित होती है। स्टोकेस्टिक ग्रेडिएंट डिसेंट, एडम और RMSprop जैसी अनुकूलन तकनीकों को शामिल किया गया है, यह दर्शाता है कि अभिसरण प्राप्त करने के लिए वज़न कैसे अपडेट किए जाते हैं। उदाहरण बताते हैं कि सीखने की दर का चयन प्रशिक्षण स्थिरता और गति को कैसे प्रभावित करता है।</p>\n<h2>नियमितीकरण और अतिउत्पादन</h2>\n<p>अतिउत्पादन तब होता है जब एक नेटवर्क प्रशिक्षण डेटा को बहुत अच्छी तरह से सीखता है, जिसमें शोर भी शामिल है, जिसके परिणामस्वरूप नए डेटा के लिए खराब सामान्यीकरण होता है। व्याख्यान नोट्स अतिउत्पादन को कम करने के लिए L1/L2 दंड, ड्रॉपआउट और प्रारंभिक रोक जैसी नियमितीकरण तकनीकों की व्याख्या करते हैं। व्यावहारिक उदाहरण दिखाते हैं कि ये तकनीकें अनदेखे डेटा पर नेटवर्क के प्रदर्शन को कैसे बेहतर बनाती हैं, जिससे वे वास्तविक दुनिया के कार्यों के लिए मजबूत और विश्वसनीय बन जाते हैं।</p>\n<h2>व्यावहारिक कार्यान्वयन</h2>\n<p>व्याख्यान नोट्स पायथन और टेंसरफ़्लो और पाइथोरच जैसे पुस्तकालयों का उपयोग करके न्यूरल नेटवर्क को लागू करने के चरण-दर-चरण उदाहरण प्रदान करते हैं। वज़न को आरंभ करने और परतों को परिभाषित करने से लेकर नेटवर्क को प्रशिक्षित करने और मूल्यांकन करने तक, शिक्षार्थियों को व्यावहारिक अनुभव प्राप्त होता है। अभ्यासों में सरल बाइनरी क्लासिफायर बनाना, हिडन लेयर्स, सक्रियण फ़ंक्शन और सीखने की दरों के साथ प्रयोग करना और यह देखना शामिल है कि ये पैरामीटर मॉडल के प्रदर्शन को कैसे प्रभावित करते हैं।</p>\n<h2>चुनौतियाँ और विचार</h2>\n<p>अतिरिक्त विषयों में लुप्त होती और विस्फोटित ढाल, नेटवर्क आर्किटेक्चर का चयन, डेटा प्रीप्रोसेसिंग, फीचर स्केलिंग और बैच सामान्यीकरण जैसी चुनौतियाँ शामिल हैं। प्रत्येक विषय को उदाहरणों, आरेखों और प्रभावी न्यूरल नेटवर्क बनाने के लिए व्यावहारिक सुझावों के साथ समझाया गया है।</p>\n<h2>निष्कर्ष</h2>\n<p>इस व्याख्यान नोट्स एसेट के अंत तक, शिक्षार्थियों को न्यूरल नेटवर्क के मूल सिद्धांतों की पूरी समझ प्राप्त होती है, परसेप्ट्रॉन से लेकर डीप लर्निंग आर्किटेक्चर तक। संरचित दृष्टिकोण सुनिश्चित करता है कि शिक्षार्थी सैद्धांतिक रूप से समझ सकते हैं और व्यावहारिक रूप से न्यूरल नेटवर्क को लागू कर सकते हैं, उन्हें AI में अधिक उन्नत अनुप्रयोगों के लिए तैयार कर सकते हैं।</p>",
        "code": "68bcb59df62246c87151d350",
        "language": "hi",
        "source_asset_id": "68bcb59df62246c87151d34f",
        "created_at": "2025-09-07T00:17:20.199000",
        "updated_at": "2025-09-07T00:17:20.199000"
      }
    },
    {
      "success": true,
      "asset_code": "68bcb59df62246c87151d350",
      "target_language": "te",
      "translation": {
        "error": "Translation creation failed: Translation for asset '68bcb59df62246c87151d350' in language 'te' already exists"
      }
    },
    {
      "success": true,
      "asset_code": "68bc2ea817fa5a8d69dc67fc",
      "target_language": "hi",
      "translation": {
        "_id": "68bccf1c986b1611ce6887dc",
        "name": "What is Generative AI ?",
        "style": "original",
        "content": "<!doctype html>\n<html lang=\"hi\">\n<head>\n<meta charset=\"utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n<title>जनरेटिव AI — अवलोकन</title>\n<style>\nbody { font-family: system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial; line-height: 1.6; color: #0f1724; padding: 28px; margin: auto; }\nh1 { font-size: 1.6rem; margin-bottom: 0.6rem; }\nh2 { font-size: 1.125rem; margin-top: 1.6rem; margin-bottom: 0.5rem; }\np { margin: 0.5rem 0 1rem 0; color: #374151; }\nol, ul { margin: 0.5rem 0 1rem 1.25rem; color: #374151; }\nli { margin: 0.45rem 0; }\n.lead { font-size: 1rem; color: #0b1220; }\n.section-title { font-weight: 700; color: #0b1220; margin-top: 1rem; }\n.key { margin-top: 1.25rem; font-weight: 600; }\n</style>\n</head>\n<body>\n<h1>जनरेटिव AI</h1>\n<p class=\"lead\">\nजनरेटिव AI कृत्रिम बुद्धिमत्ता (AI) का एक प्रकार है जो पाठ, चित्र, संगीत, कोड और वीडियो जैसे नए, मौलिक कंटेंट का निर्माण करता है, जो उस डेटा पर आधारित होता है जिस पर इसे प्रशिक्षित किया गया था। पारंपरिक AI के विपरीत जो मौजूदा डेटा का विश्लेषण या वर्गीकरण करता है, जनरेटिव AI मॉडल विशाल डेटासेट के भीतर पैटर्न और संबंधों को सीखते हैं ताकि उपयोगकर्ता के संकेतों के जवाब में अद्वितीय और मानव जैसे आउटपुट उत्पन्न किए जा सकें।\n</p>\n<h2>यह कैसे काम करता है</h2>\n<ol>\n<li>\n<strong>प्रशिक्षण डेटा:</strong>\n<p>जनरेटिव AI मॉडल विशाल डेटासेट पर प्रशिक्षित होते हैं, जिसमें पाठ, चित्र या ऑडियो शामिल हो सकते हैं।</p>\n</li>\n<li>\n<strong>पैटर्न सीखना:</strong>\n<p>प्रशिक्षण के दौरान, मॉडल इस डेटा के अंतर्निहित पैटर्न, संरचनाओं और निर्भरताओं को सीखते हैं।</p>\n</li>\n<li>\n<strong>सामग्री उत्पन्न करना:</strong>\n<p>जब कोई संकेत दिया जाता है, तो मॉडल इन सीखे हुए पैटर्न का उपयोग करके नई, पहले कभी न देखी गई सामग्री उत्पन्न करता है जो उस डेटा के समान होती है जिस पर इसे प्रशिक्षित किया गया था।</p>\n</li>\n</ol>\n<h2>उदाहरण और उपयोग के मामले</h2>\n<ul>\n<li><strong>पाठ निर्माण:</strong> ईमेल, लेख, कविताएँ या कहानियाँ लिखना।</li>\n<li><strong>छवि निर्माण:</strong> डिजिटल कला, ऐसे लोगों की यथार्थवादी छवियाँ बनाना जो मौजूद नहीं हैं, या पाठ विवरणों से चित्रण।</li>\n<li><strong>कोड निर्माण:</strong> सॉफ्टवेयर विकास के लिए कोड की पंक्तियाँ उत्पन्न करना।</li>\n<li><strong>ऑडियो और वीडियो:</strong> संगीत की रचना करना या पाठ्य संकेतों से वीडियो क्लिप उत्पन्न करना।</li>\n</ul>\n<h2 class=\"key\">मुख्य अंतर</h2>\n<p>\nमूल अंतर निर्माण है: पारंपरिक AI वर्गीकरण या भविष्यवाणी जैसे कार्य करता है, जबकि जनरेटिव AI कुछ नया और मौलिक बनाता है।\n</p>\n</body>\n</html>",
        "code": "68bc2ea817fa5a8d69dc67fc",
        "language": "hi",
        "source_asset_id": "68bc14d817fa5a8d69dc67f4",
        "created_at": "2025-09-07T00:17:32.206000",
        "updated_at": "2025-09-07T00:17:32.206000"
      }
    },
    {
      "success": true,
      "asset_code": "68bc2ea817fa5a8d69dc67fc",
      "target_language": "te",
      "translation": {
        "error": "Translation creation failed: Translation for asset '68bc2ea817fa5a8d69dc67fc' in language 'te' already exists"
      }
    }
  ]
}